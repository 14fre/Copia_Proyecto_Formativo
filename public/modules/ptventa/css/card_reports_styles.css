.card-resources {
    --text-color-hover: #ffffff;
    --box-shadow-color: rgba(26, 93, 209, 0.48);
    --icon-color-hover: #fff;
}

.card-custom {
    width: 220px;
    height: 321px;
    background: #496f5d93;
    border-top-right-radius: 10px;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    position: relative;
    box-shadow: 0 14px 26px rgba(0, 0, 0, 0.04);
    transition: all 0.3s ease-out;
    text-decoration: none;
    flex-basis: 100%;
    margin-bottom: 20px;
}

@media (max-width: 768px) {
    .card-custom {
        /* Adjust the width and height to fit smaller screens */
        width: 100%;
        height: auto; /* Allow the height to adjust based on content */

        /* Remove unnecessary styles for small screens */
        position: static;
        box-shadow: none;
        transition: none;
        transform: none;
    }
}

.card-custom:hover {
    transform: translateY(-5px) scale(1.005) translateZ(0);
    box-shadow: 0 30px 40px rgba(0, 0, 0, 0.2), /* Aumentamos el desplazamiento vertical */
                0 24px 46px var(--box-shadow-color);
}

.card-custom:hover .overlay {
    transform: scale(4) translateZ(0);
}

.card-custom:hover p {
    color: var(--text-color-hover);
}

.card-custom:hover i {
    color: var(--icon-color-hover);
}

.card-custom:active {
    transform: scale(1) translateZ(0);
    box-shadow: 0 15px 24px rgba(0, 0, 0, 0.11),
        0 15px 24px var(--box-shadow-color);
}

.card-custom p {
    font-size: 20px;
    color: #4C5656;
    margin-top: 30px;
    z-index: 1000;
    transition: color 0.3s ease-out;
}

.icon-book {
    font-size: 40px; /* Tamaño inicial del icono */
    color: rgba(218, 51, 51, 0.752);
    position: absolute;
    top: 30%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 1;
    transition: transform 0.3s ease-out; /* Agregamos una transición suave para el giro */
}

.card-custom:hover .icon-book {
    animation: multiply-fall 1s ease-out; /* Duración y efecto de la animación */
}

@keyframes multiply-fall {
    0% {
        transform: translate(-50%, -50%) scale(1); /* Tamaño inicial */
    }
    50% {
        transform: translate(-50%, -50%) scale(2) rotate(180deg); /* Multiplicación y giro */
    }
    100% {
        transform: translate(-50%, 100%) scale(0.5) rotate(360deg); /* Caída y rotación completa */
    }
    /* Añadimos la regla para que mantenga la última posición */
    100% {
        transform: translate(-50%, -50%) scale(1);
    }
}






